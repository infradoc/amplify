name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - feature
      - main
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test
      - name: Build the project
        run: npm run build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: website
          path: '**/*'

  scan:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && (github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main')
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: website
          path: '**/*'
      - name: Clear SonarScanner cache
        run: rm -rf /opt/sonar-scanner/.sonar/cache
      - name: SonarQube Scan with Debug Logging
        uses: sonarsource/sonarqube-scan-action@master
        with:
          args: -X
        #  token: ${{ secrets.SONAR_TOKEN }}
          properties: sonar-project.properties
      - name: Set scan result and check status
        id: set-scan-result
        run: |
          if [ $? -eq 0 ]; then
            echo "scan_success=true" >> $GITHUB_ENV
          else
            echo "scan_success=false" >> $GITHUB_ENV
            exit 1
          fi
      - name: Print scan result
        run: echo "Scan success:" $scan_success

  debug-event:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Event
        run: |
          echo "GitHub Event Name: ${{ github.event_name }}"
          echo "GitHub Event Action: ${{ github.event.action }}"
          echo "GitHub Pull Request Number: ${{ github.event.pull_request.number }}"
          echo "GitHub Base Ref: ${{ github.event.pull_request.base.ref }}"
          echo "GitHub Merged: ${{ github.event.pull_request.merged }}"

  merge-dev:
    needs: [scan]
    runs-on: ubuntu-latest
#   if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.ref == 'refs/heads/dev' }}
    if: | 
      github.event_name == 'pull_request' &&
      github.event.action == 'closed' &&
      github.event.pull_request.merged == true &&
      github.ref == ${{ github.event.number == 0 && 'refs/heads/master' ||  format('refs/pull/{0}/merge', github.event.number) }}

    steps:
      - name: Merge feature branch into dev
        uses: actions/github-script@v4
        with:
          script: |
            await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.pull_request.number }},
              merge_method: 'squash'
            })

  merge-prod:
    needs: [scan]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.ref == 'refs/heads/main'
    steps:
      - name: Wait for reviewer approval
        uses: actions/github-script@v4
        with:
          script: |
            const { data: pullRequest } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.pull_request.number }},
            });
            if (!pullRequest.merged) {
              throw new Error("Pull request not merged");
            }
      - name: Merge dev into prod
        uses: actions/github-script@v4
        with:
          script: |
            await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.pull_request.number }},
              merge_method: 'squash'
            })
